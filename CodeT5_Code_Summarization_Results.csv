Method Code,Documentation,Generated Text
"def run(self): this_dir = os.getcwd() os.chdir(""Tests"") sys.path.insert(0, """") import run_tests if self.offline: run_tests.main([""--offline""]) else: run_tests.main([]) os.chdir(this_dir)",run the test,"Executes test suite from the Tests directory, adjusting paths as needed"
def can_import(module_name): try: return __import__(module_name) except ImportError: return None,check we can import the requested module,Attempts to import a module and returns the module object or None if the import fails
"def get_version(): for line in open(""Bio/__init__.py""): if line.startswith(""__version__ = ""): return ast.literal_eval(line.split(""="")[1].strip()) return ""Undefined""",get version number from init.py,Reads the version number from the Bio package's __init__.py file
"def open(filename, mode=""rb""): if ""r"" in mode.lower(): return BgzfReader(filename, mode) elif ""w"" in mode.lower() or ""a"" in mode.lower(): return BgzfWriter(filename, mode) else: raise ValueError(f""Bad mode {mode!r}"")",open a bgzf file for reading writing or appending,"Opens a BGZF file in read, write, or append mode based on the specified mode"
"def make_virtual_offset(block_start_offset, within_block_offset): if within_block_offset < 0 or within_block_offset >= 65536: raise ValueError(""Require 0 <= within_block_offset < 2**16, got %i"" % within_block_offset) if block_start_offset < 0 or block_start_offset >= 281474976710656: raise ValueError(""Require 0 <= block_start_offset < 2**48, got %i"" % block_start_offset) return (block_start_offset << 16) | within_block_offset",compute a bgzf virtual offset from block start and within block offset,Calculates the virtual offset within a BGZF file given the start of the block and the offset within the block
